{"version":3,"sources":["../src/index.js"],"names":[],"mappings":"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","file":"index.js","sourcesContent":["import { roundedCorner, minify as min, svg, makeElement, rect } from '@svag/lib'\nimport Toolbar from '@svag/toolbar'\nimport Shadow from '@svag/shadow'\n\n/**\n * Create an SVG showing for a simple macOS window with the given content.\n * @param {WindowOptions} options\n * @param {string} options.content The content to display inside of the window.\n * @param {number} options.width The width of the content.\n * @param {number} options.height The height of the content.\n * @param {string} [options.backgroundColor=\"#000000\"] The color of the window. Default `#000000`.\n * @param {string} [options.foregroundColor=\"#FFFFFF\"] The foreground color of the container group which will hold the content. Default `#FFFFFF`.\n * @param {boolean} [options.noStretch=false] Do not stretch the SVG when embedded as an image. This is achieved by explicitly setting width and height attributes on the `svg` element. Default `false`.\n * @param {string} [options.title] An optional title for the window.\n * @param {object} [options.attributes] Any additional attributes to set on the holder of the content, e.g., `font-family`.\n * @param {number} [options.minWidth] The minimum width that the window should take. If the content's width is greater than this value, the height will adjust to the content.\n * @param {number} [options.minHeight] The minimum height that the window should take. If the content's height is greater than this value, the height will adjust to the content.\n * @param {number} [options.paddingY=5] The padding on the Y-axis (top and bottom). Default `5`.\n * @param {number} [options.paddingX=5] The padding on the X-axis (left and right). Default `5`.\n * @param {boolean} [options.noShadow=false] Disable the dropping shadow. Default `false`.\n * @param {boolean} [options.minify=true] Remove whitespace between tags (e.g., between `>` and `<`). If there are any problems with generated SVG, this could be disabled. Default `true`.\n */\nconst simpleWindow = (options) => {\n  const {\n    content, width: contentWidth, height: contentHeight, attributes = {}, backgroundColor = '#FFFFFF',\n    foregroundColor = '#000000', noStretch = false, title = '', minWidth = 0,\n    minHeight = 0, paddingY = 5, paddingX = 5, noShadow = false, minify = true,\n  } = options\n  const tbHeight = 22\n  const windowWidth = Math.max(minWidth, contentWidth + (paddingX * 2))\n  const windowHeight = Math.max(minHeight, contentHeight + tbHeight + (paddingY * 2))\n  const lineY = tbHeight\n  const lnHeight = 1\n  const bodyY = lineY + lnHeight\n  const rd = 3\n  const rd2 = rd * 2\n  const borderColor = '#000000'\n  const bAlpha = '0.2'\n  const blurStd = 27.5\n  const margin = (noShadow ? 0 : blurStd * 4)\n  const svgWidth = margin + windowWidth + 2\n  const svgHeight = margin + windowHeight + 2\n\n  const { translateX, translateY, shadow } = noShadow ? { translateX: 1, translateY: 1 } : Shadow({\n    width: windowWidth,\n    height: windowHeight,\n  })\n  const translate = `translate(${translateX}, ${translateY})`\n  const toolbar = Toolbar({\n    width: windowWidth,\n    title,\n  })\n  const border = rect({ // the rounded stroke around the window\n    width: windowWidth,\n    height: windowHeight,\n    rx: rd2,\n    ry: rd2,\n    stroke: borderColor,\n    'stroke-opacity': bAlpha,\n  })\n  const line = makeElement('line', {\n    attributes: {\n      y1: lineY,\n      x2: windowWidth,\n      y2: lineY,\n      stroke: '#7E7E7E',\n      'shape-rendering': 'crispEdges',\n    },\n  })\n  const bg = makeElement('path', {\n    attributes: {\n      d: `M${windowWidth},${lineY} L${windowWidth},${windowHeight - rd2} ${roundedCorner({ x: windowWidth, y: windowHeight - rd2 }, { x: windowWidth - rd2, y: windowHeight })} L${rd2},${windowHeight} ${roundedCorner({ x: rd2, y: windowHeight }, { x: 0, y: windowHeight - rd2 })} L0,${lineY} Z`,\n      fill: backgroundColor,\n    },\n  })\n  const holder = makeElement('g', {\n    attributes: {\n      transform: `translate(${paddingX}, ${bodyY + paddingY})`,\n      fill: foregroundColor,\n      ...attributes,\n    },\n    content,\n  })\n  const window = makeElement('g', {\n    attributes: {\n      transform: translate,\n      fill: 'none',\n    },\n    content: [\n      border,\n      toolbar,\n      bg,\n      line,\n      holder,\n    ],\n  })\n  const image = svg({\n    width: svgWidth,\n    height: svgHeight,\n    content: [shadow, window],\n    stretch: !noStretch,\n  })\n  const win = `<?xml version=\"1.0\" encoding=\"utf-8\"?>\n${image}`\n  const res = minify ? min(win) : win\n  return res\n}\n\n/* documentary types/index.xml */\n/**\n * @typedef {Object} WindowOptions\n * @prop {string} content The content to display inside of the window.\n * @prop {number} width The width of the content.\n * @prop {number} height The height of the content.\n * @prop {string} [backgroundColor=\"#000000\"] The color of the window. Default `#000000`.\n * @prop {string} [foregroundColor=\"#FFFFFF\"] The foreground color of the container group which will hold the content. Default `#FFFFFF`.\n * @prop {boolean} [noStretch=false] Do not stretch the SVG when embedded as an image. This is achieved by explicitly setting width and height attributes on the `svg` element. Default `false`.\n * @prop {string} [title] An optional title for the window.\n * @prop {object} [attributes] Any additional attributes to set on the holder of the content, e.g., `font-family`.\n * @prop {number} [minWidth] The minimum width that the window should take. If the content's width is greater than this value, the height will adjust to the content.\n * @prop {number} [minHeight] The minimum height that the window should take. If the content's height is greater than this value, the height will adjust to the content.\n * @prop {number} [paddingY=5] The padding on the Y-axis (top and bottom). Default `5`.\n * @prop {number} [paddingX=5] The padding on the X-axis (left and right). Default `5`.\n * @prop {boolean} [noShadow=false] Disable the dropping shadow. Default `false`.\n * @prop {boolean} [minify=true] Remove whitespace between tags (e.g., between `>` and `<`). If there are any problems with generated SVG, this could be disabled. Default `true`.\n */\n\nexport default simpleWindow"]}